.TH "NETCONF rpc-reply (libxml2)" 3 "Thu Nov 12 2015" "Version 0.10.0-76_trunk" "libnetconf" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NETCONF rpc-reply (libxml2) \- 
.PP
libnetconf's functions for handling the NETCONF <rpc-reply> messages\&. These functions accepts parameters as libxml2 structures\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBnc_reply\fP * \fBncxml_reply_build\fP (xmlDocPtr reply_dump)"
.br
.RI "\fIBuild <rpc-reply> message from the libxml2 document structure\&. This is the reverse function of the \fBncxml_reply_dump()\fP\&. \fP"
.ti -1c
.RI "\fBnc_reply\fP * \fBncxml_reply_data\fP (const xmlNodePtr data)"
.br
.RI "\fICreate rpc-reply response with <data> content\&. \fP"
.ti -1c
.RI "\fBnc_reply\fP * \fBncxml_reply_data_ns\fP (const xmlNodePtr data, const char *ns)"
.br
.RI "\fICreate rpc-reply response with <data> content in the specified namespace\&. \fP"
.ti -1c
.RI "xmlDocPtr \fBncxml_reply_dump\fP (const \fBnc_reply\fP *reply)"
.br
.RI "\fIDump the rpc-reply message into a libxml2 document structure\&. \fP"
.ti -1c
.RI "xmlNodePtr \fBncxml_reply_get_data\fP (const \fBnc_reply\fP *reply)"
.br
.RI "\fIGet <data> element in <rpc-reply> including its content\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
libnetconf's functions for handling the NETCONF <rpc-reply> messages\&. These functions accepts parameters as libxml2 structures\&. 


.SH "Function Documentation"
.PP 
.SS "\fBnc_reply\fP* ncxml_reply_build (xmlDocPtrreply_dump)"

.PP
Build <rpc-reply> message from the libxml2 document structure\&. This is the reverse function of the \fBncxml_reply_dump()\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIreply_dump\fP XML document structure with the NETCONF <rpc-reply> message\&. The structure is integrated into the internal rpc structure and caller should not access (or free) the given XML document anymore\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Complete reply structure used by libnetconf's functions\&. 
.RE
.PP

.SS "\fBnc_reply\fP* ncxml_reply_data (const xmlNodePtrdata)"

.PP
Create rpc-reply response with <data> content\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Content (possibly a node list) for the <rpc-reply>'s <data> element\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created <rpc-reply> message\&. 
.RE
.PP

.SS "\fBnc_reply\fP* ncxml_reply_data_ns (const xmlNodePtrdata, const char *ns)"

.PP
Create rpc-reply response with <data> content in the specified namespace\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Content (possibly a node list) for the <rpc-reply>'s <data> element\&. 
.br
\fIns\fP Default namespace for the data element\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created <rpc-reply> message\&. 
.RE
.PP

.SS "xmlDocPtr ncxml_reply_dump (const \fBnc_reply\fP *reply)"

.PP
Dump the rpc-reply message into a libxml2 document structure\&. 
.PP
\fBParameters:\fP
.RS 4
\fIreply\fP rpc-reply message\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
XML document of the NETCONF's <rpc-reply> message\&. Caller is supposed to free the returned structure with xmlFreeDoc()\&. 
.RE
.PP

.SS "xmlNodePtr ncxml_reply_get_data (const \fBnc_reply\fP *reply)"

.PP
Get <data> element in <rpc-reply> including its content\&. 
.PP
\fBParameters:\fP
.RS 4
\fIreply\fP rpc-reply message\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
XML node <data> with its content\&. <data> is included to provide a valid (non-NULL) output in case of empty data returned (e\&.g\&. when all the data are filterred out)\&. Caller is supposed to free the returned structure with xmlFreeNode()\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libnetconf from the source code\&.
